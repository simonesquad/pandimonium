"use strict";
/**
 * Schemas
 * The CRM uses schemas to define how custom objects should store and represent information in the HubSpot CRM. Schemas define details about an object\'s type, properties, and associations. The schema can be uniquely identified by its **object type ID**.
 *
 * The version of the OpenAPI document: v3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.AssociationDefinition = void 0;
/**
* Defines an association between two object types.
*/
class AssociationDefinition {
    static getAttributeTypeMap() {
        return AssociationDefinition.attributeTypeMap;
    }
}
exports.AssociationDefinition = AssociationDefinition;
AssociationDefinition.discriminator = undefined;
AssociationDefinition.attributeTypeMap = [
    {
        "name": "fromObjectTypeId",
        "baseName": "fromObjectTypeId",
        "type": "string"
    },
    {
        "name": "toObjectTypeId",
        "baseName": "toObjectTypeId",
        "type": "string"
    },
    {
        "name": "name",
        "baseName": "name",
        "type": "string"
    },
    {
        "name": "cardinality",
        "baseName": "cardinality",
        "type": "AssociationDefinition.CardinalityEnum"
    },
    {
        "name": "inverseCardinality",
        "baseName": "inverseCardinality",
        "type": "AssociationDefinition.InverseCardinalityEnum"
    },
    {
        "name": "id",
        "baseName": "id",
        "type": "string"
    },
    {
        "name": "createdAt",
        "baseName": "createdAt",
        "type": "Date"
    },
    {
        "name": "updatedAt",
        "baseName": "updatedAt",
        "type": "Date"
    }
];
(function (AssociationDefinition) {
    let CardinalityEnum;
    (function (CardinalityEnum) {
        CardinalityEnum[CardinalityEnum["ONE"] = 'ONE_TO_ONE'] = "ONE";
        CardinalityEnum[CardinalityEnum["MANY"] = 'ONE_TO_MANY'] = "MANY";
    })(CardinalityEnum = AssociationDefinition.CardinalityEnum || (AssociationDefinition.CardinalityEnum = {}));
    let InverseCardinalityEnum;
    (function (InverseCardinalityEnum) {
        InverseCardinalityEnum[InverseCardinalityEnum["ONE"] = 'ONE_TO_ONE'] = "ONE";
        InverseCardinalityEnum[InverseCardinalityEnum["MANY"] = 'ONE_TO_MANY'] = "MANY";
    })(InverseCardinalityEnum = AssociationDefinition.InverseCardinalityEnum || (AssociationDefinition.InverseCardinalityEnum = {}));
})(AssociationDefinition = exports.AssociationDefinition || (exports.AssociationDefinition = {}));
